version: 2.1
orbs:
    slack: circleci/slack@3.4.2
    aws-cli: circleci/aws-cli@1.2.1
commands:
    pacakge-setup:
        steps:
            - run:
                command: |
                    PACKAGE_NAME=$(node -p -e "require('./package.json').name")
                    echo "export PACKAGE_NAME=$PACKAGE_NAME" >> $BASH_ENV
                    source $BASH_ENV
    node-install:
        steps:
            - run: npm ci
    aws-profiles:
        steps:
            - run: npm run sct -- create aws-profiles --region us-east-2 --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
    node-linter:
        steps:
            - run: npm run lint -- --format html --output-file ./coverage/lint/index.html
            - store_artifacts:
                path: ./coverage
    node-test:
        steps:
            - run:
                when: always
                command: npm run test -- --reporter mocha-multi-reporters --reporter-options configFile=./test/reporter-config.json
                environment:
                    MOCHAWESOME_REPORTFILENAME: index.html
                    MOCHAWESOME_REPORTDIR: ./coverage/unit-test
            - store_test_results:
                path: ./coverage/unit-test
            - store_artifacts:
                path: ./coverage
    node-report:
        steps:
            - run: npm run report -- --reporter=html
            - store_artifacts:
                path: ./coverage
    publish-results:
        steps:
            - run: npm run sct -- create s3-cloudfront --stage dev --domain test-reports.syndpe.com --role CICD
            - run: aws s3 sync ./coverage s3://dev-test-reports.syndpe.com/$CIRCLE_PROJECT_REPONAME --profile dev --delete
    gemfury-deploy:
        steps:
            - run: npm version $CIRCLE_TAG --allow-same-version --no-git-tag-version
            - run: npm pack
            - run: curl -F package=@$PACKAGE_NAME-$CIRCLE_TAG.tgz https://${FURY_PKG_AUTH}@push.fury.io/syngenta-digital/
    slack-status:
        steps:
            - slack/status:
                mentions: '${CIRCLE_USERNAME}, version=$CIRCLE_TAG'
    slack-error:
        steps:
            - slack/status:
                fail_only: true
                mentions: '${CIRCLE_USERNAME}'
jobs:
    install-build-test:
        docker:
            - image: node:12
        steps:
            - checkout
            - node-install
            - aws-cli/setup
            - aws-profiles
            - node-linter
            - node-test
            - node-report
            - publish-results
            - slack-error
    install-build-deploy:
        docker:
            - image: node:12
        steps:
            - checkout
            - pacakge-setup
            - node-install
            - gemfury-deploy
            - slack-status
workflows:
    install-build-deploy:
        jobs:
            - install-build-deploy:
                context: aws-tools-cicd
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
    install-build-test:
        jobs:
            - install-build-test:
                context: aws-tools-cicd
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        ignore: /dependabot.*/
